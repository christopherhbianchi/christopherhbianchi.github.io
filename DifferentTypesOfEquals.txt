‘=’ vs ‘==’ vs ‘.equals()’=, ==, and .equals() look similar in English, however they each perform very different actions and are used under differing circumstances.=The = is how we store a value inside of a variable, and it is used with all data types. You use = when declaring, and defining a variable. For example, if we would like to store a value of 5 inside of a variable we want to name x, we would say “int x =5;”.==The == is a boolean reference comparison, and it checks that both variables point to the same object (memory location). For instance, if the variables x and y both have the value “5” stored, the comparison of (x == y) would evaluate to “true”. In other words, it only compares the shallow values of the variable. You can’t test if Strings are “the same” using ==. For example, the shallow value of 2 Strings are only equal when they refer to the same memory location. This is best used when we want to evaluate that 2 variables both point to the same object, such as 2 double variables both have stored a “5.0”..equals()This is used exclusively with String data types. This is used to see if the values stored within String variables, or a variable to a String of text are identical to each other. It compares the deep values of variables rather than the shallow values. Strings don’t follow mathematical rules, so we cannot effectively use operators such as == on them. As a replacement, we use this method to determine that the Strings match up character for character exactly. If the String within the variable matches up to the other string exactly, it evaluates to “true”, if that is not the case the method evaluates to “false”.  An example use case would be if we wanted to determine if a user’s input for their first name like “Chris” matched an account with any record of first name that was already stored.